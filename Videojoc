import pygame
import random
import math

# Initialize Pygame
pygame.init()

# Set up the game window
width = 800
height = 600
win = pygame.display.set_mode((width, height))
pygame.display.set_caption("Angry Birds")

# Define colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# Bird class
class Bird(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((40, 40))
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.rect.center = (100, height // 2)
        self.velocity = [0, 0]
        self.is_flying = False

    def update(self):
        if self.is_flying:
            self.velocity[1] += 0.5
import pygame
import math

# Initialize Pygame
pygame.init()

# Set up the game window
width = 800
height = 600
win = pygame.display.set_mode((width, height))
pygame.display.set_caption("Angry Birds")

# Define colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# Bird class
class Bird(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((40, 40))
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.rect.center = (100, height // 2)
        self.velocity = [0, 0]
        self.is_flying = False

    def update(self):
        if self.is_flying:
            self.velocity[1] += 0.5
            self.rect.move_ip(self.velocity)

    def launch(self, angle, power):
        self.velocity[0] = power * math.cos(math.radians(angle))
        self.velocity[1] = -power * math.sin(math.radians(angle))
        self.is_flying = True

# Pig class
class Pig(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((40, 40))
        self.image.fill(GREEN)
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)

# Create bird and pig instances
bird = Bird()
pig = Pig(width - 100, height - 100)

# Create sprite groups
all_sprites = pygame.sprite.Group()
all_sprites.add(bird, pig)

# Game loop
running = True
launching = False
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if not bird.is_flying:
                launching = True
        elif event.type == pygame.MOUSEBUTTONUP:
            if not bird.is_flying and launching:
                mouse_pos = pygame.mouse.get_pos()
                launch_angle = math.degrees(math.atan2(bird.rect.centery - mouse_pos[1], mouse_pos[0] - bird.rect.centerx))
                launch_power = math.hypot(bird.rect.centerx - mouse_pos[0], mouse_pos[1] - bird.rect.centery)
                bird.launch(launch_angle, launch_power)
                launching = False

    # Update game objects
    all_sprites.update()

    # Check for collisions
    if pygame.sprite.collide_rect(bird, pig):
        distance = math.hypot(bird.rect.centerx - pig.rect.centerx, bird.rect.centery - pig.rect.centery)
        if distance < bird.rect.width / 2 + pig.rect.width / 2:
            print("Collision!")

    # Clear the screen
    win.fill(WHITE)

    # Draw game objects
    all_sprites.draw(win)

    # Update the display
    pygame.display.flip()

# Quit the game
pygame.quit()

